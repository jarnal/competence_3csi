<?php

namespace SchoolBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DiplomeRepository extends EntityRepository
{

    /**
     *
     */
    public function findAll()
    {
        $sql =  "SELECT * FROM c3csi_matiere m";

        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('SchoolBundle\Entity\Matiere', 'm');
        $rsm->addFieldResult('m', 'id', 'id');
        $rsm->addFieldResult('m', 'name', 'name');

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $matieres = $query->getResult();

        return $matieres;
    }

    /**
     * @param $id
     */
    public function findOneById($id, $fullObject=true)
    {
        $sql =  "SELECT *".
            "FROM c3csi_matiere m WHERE id = ?";

        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('SchoolBundle\Entity\Matiere', 'm');
        $rsm->addFieldResult('m', 'id', 'id');
        $rsm->addFieldResult('m', 'name', 'name');

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $id);
        $result = $query->getResult();

        if(isset($result[0])){
            return $result[0];
        }
        return $result;
    }

    /**
     *
     *
     * @param $groupID
     * @return array
     */
    public function findByUser($userID){
        $sql =  "SELECT User.id AS user_id, CONCAT(User.firstname,' ',User.lastname) AS user_name, ".
                "Diplome.id AS diplome_id, Diplome.name AS diplome_name, ".
                "ObtDipl.mention AS diplome_mention, ObtDipl.date_obtention as diplome_date ".
                "FROM c3csi_obtention_diplome ObtDipl ".
                "LEFT JOIN c3csi_user User ON User.id = ObtDipl.user_id ".
                "LEFT JOIN c3csi_diplome Diplome ON Diplome.id = ObtDipl.diplome_id ".
                "WHERE ObtDipl.user_id = ?";

        $rsm = new ResultSetMapping();
        $rsm->addScalarResult("user_id", "user_id");
        $rsm->addScalarResult("user_name", "user_name");
        $rsm->addScalarResult("diplome_id", "diplome_id");
        $rsm->addScalarResult("diplome_name", "diplome_name");
        $rsm->addScalarResult("diplome_mention", "diplome_mention");
        $rsm->addScalarResult("diplome_date", "diplome_date");

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $userID);
        $result = $query->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

        return $result;
    }

}
