<?php

namespace PeopleBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{

    /**
     * Returns all examens
     */
    public function findAll()
    {
        $sql =  "SELECT * ".
                "FROM c3csi_user";

        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('PeopleBundle\Entity\User', 'u');
        $rsm->addFieldResult('u', 'id', 'id');
        $rsm->addFieldResult('u', 'firstname', 'firstname');
        $rsm->addFieldResult('u', 'lastname', 'lastname');

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $matieres = $query->getResult();

        return $matieres;
    }

    /**
     * @param $id
     */
    public function findOneById($id, $fullObject=true)
    {
        $query = $this->createQueryBuilder('user');
        $query->where('user.id = :userID')
            ->setParameter('userID', $id)
        ;

        if($fullObject){
            //?
        }
        $result = $query->getQuery()->getResult();
        if(isset($result[0])){
            return $result[0];
        }
        return $query->getQuery()->getResult();
    }

    /**
     * Returns the examens related to the group passed in parameter
     *
     * @param $groupID
     */
    public function findByGroupId($groupID) {
        $sql =  "SELECT user.id, user.firstname, user.lastname ".
                "FROM c3csi_group grp ".
                "LEFT JOIN c3csi_group_rel_user grp_rel_us ON grp_rel_us.group_id = grp.id ".
                "LEFT JOIN c3csi_user user ON user.id = grp_rel_us.user_id ".
                "WHERE grp.id = ?";

        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('PeopleBundle\Entity\User', 'u');
        $rsm->addFieldResult('u', 'id', 'id');
        $rsm->addFieldResult('u', 'firstname', 'firstname');
        $rsm->addFieldResult('u', 'lastname', 'lastname');

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $groupID);
        $result = $query->getResult();

        return $result;
    }

}
